name: docker

on:
  push:
    # Publish 'main' as Docker 'latest' image
    branches: 
      - main
    
    # Publish 'v1.2.3' tags as releases.
    tags:
      - v*
  
  # Run tests for any PRs.
  pull_request:

env:
  # TODO: change variable to your image's name.
  FLASK_IMAGE_NAME : flask-app
  NGINX_IMAGE_NAME : nginx-app 

jobs:
  # Run tests
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test :
    runs-on: ubuntu-latest
    
    steps:
      - uses : actions/checkout@v2
      
      - name : Set working directory
        run : cd flask_app
      
      - name : Run tests 
        run : |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            cd flask_app
            docker build . --file Dockerfile
          fi
          
  # Push image to GitHub packages
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test
    
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps: 
      - uses : actions/checkout@v2
      
      - name : Log into registry
        run : echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
      - name : Build Flask image 
        run : cd flask_app && docker build . --file Dockerfile --tag $FLASK_IMAGE_NAME
      
      - name: Push Flask image
        run: |
          FLASK_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$FLASK_IMAGE_NAME
          
          # Change all uppercase to lowercase
          FLASK_IMAGE_ID=$(echo $FLASK_IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          echo FLASK_IMAGE_ID=$FLASK_IMAGE_ID
          echo VERSION=$VERSION
          
          docker tag $FLASK_IMAGE_NAME $FLASK_IMAGE_ID:$VERSION
          docker push $FLASK_IMAGE_ID:$VERSION
        
      - name: Build Nginx image
        run: cd nginx && docker build . --file Dockerfile --tag $NGINX_IMAGE_NAME
      
      - name: Push Nginx image
        run: |
          NGINX_IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$NGINX_IMAGE_NAME
          
          # Change all uppercase to lowercase
          NGINX_IMAGE_ID=$(echo $NGINX_IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          echo NGINX_IMAGE_ID=$NGINX_IMAGE_ID
          echo VERSION=$VERSION
          
          docker tag $NGINX_IMAGE_NAME $NGINX_IMAGE_ID:$VERSION
          docker push $NGINX_IMAGE_ID:$VERSION
